import{j as t}from"./jsx-runtime-D_zvdyIk.js";import{r as c}from"./index-iNOV5qWA.js";import{L as n}from"./Logging-BGLwk1OE.js";import{u as l}from"./useTranslation-C2ldOi4s.js";import{B as p}from"./Button-DslL7Hsi.js";import{C as u}from"./CircularProgress-BRQdUMA5.js";import{T as m}from"./Typography--QOf8yBx.js";const d=e=>{const i=c.useRef(null),{t:o}=l(),r=()=>{n.debug("click","SelectVBButton"),e.setProcessing(!1),e.setReadFile(null),n.info("音源zipファイルの選択","SelectVBButton"),i.current.click()},s=a=>{if(!a.target.files||a.target.files.length===0){n.warn("音源zipの選択がキャンセルされたか失敗しました","SelectVBButton");return}e.setProcessing(!0),n.info(`音源zipの選択:${a.target.files[0].name}`,"SelectVBButton"),e.setReadFile(a.target.files[0]),n.info("音源読込ダイアログの表示","SelectVBButton"),e.setDialogOpen(!0)};return t.jsxs(t.Fragment,{children:[t.jsx("input",{type:"file",onChange:s,hidden:!0,ref:i,accept:"application/zip","data-testid":"file-input"}),t.jsx(p,{fullWidth:!0,variant:"contained",color:"primary",onClick:r,disabled:e.processing,size:"large",children:e.processing?t.jsx(u,{color:"inherit",size:20}):o("top.selectZipButtonText")}),t.jsx(m,{variant:"caption",children:o("top.selectZipButtonDescription")})]})};d.__docgenInfo={description:`このアプリケーションにおける最初のUTAU音源読込処理を実行するためのボタンです。
このボタンをクリックすると、OSのファイル選択画面が表示され、ユーザーはUTAU音源形式のzipファイルを選択します。
選択されたzipファイルは、LoadVBDialogで読込処理を行います。
読込処理実行中には、このボタンはdisableとなります。
@param props
@returns`,methods:[],displayName:"SelectVBButton",props:{processing:{required:!0,tsType:{name:"boolean"},description:"音源読込処理の状況を管理するstate。読込中はtrue"},setProcessing:{required:!0,tsType:{name:"ReactDispatch",raw:"React.Dispatch<React.SetStateAction<boolean>>",elements:[{name:"ReactSetStateAction",raw:"React.SetStateAction<boolean>",elements:[{name:"boolean"}]}]},description:"音源読込処理の状況を更新するためのコールバック"},setReadFile:{required:!0,tsType:{name:"ReactDispatch",raw:"React.Dispatch<React.SetStateAction<File | null>>",elements:[{name:"ReactSetStateAction",raw:"React.SetStateAction<File | null>",elements:[{name:"union",raw:"File | null",elements:[{name:"File"},{name:"null"}]}]}]},description:"読み込んだファイルを更新するためのコールバック"},setDialogOpen:{required:!0,tsType:{name:"ReactDispatch",raw:"React.Dispatch<React.SetStateAction<boolean>>",elements:[{name:"ReactSetStateAction",raw:"React.SetStateAction<boolean>",elements:[{name:"boolean"}]}]},description:"ダイアログの表示状況を更新するためのコールバック"}}};export{d as S};
